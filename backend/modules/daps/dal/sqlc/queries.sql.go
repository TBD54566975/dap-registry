// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package sqlc

import (
	"context"
	"encoding/json"
)

const createDAP = `-- name: CreateDAP :exec
INSERT INTO daps (id, did, handle, proof) VALUES ($1, $2, $3, $4)
`

type CreateDAPParams struct {
	ID     string
	Did    string
	Handle string
	Proof  json.RawMessage
}

func (q *Queries) CreateDAP(ctx context.Context, arg CreateDAPParams) error {
	_, err := q.db.ExecContext(ctx, createDAP,
		arg.ID,
		arg.Did,
		arg.Handle,
		arg.Proof,
	)
	return err
}

const getDAP = `-- name: GetDAP :one
SELECT dbid, id, did, handle, proof, date_created FROM daps WHERE handle = $1 LIMIT 1
`

func (q *Queries) GetDAP(ctx context.Context, handle string) (Dap, error) {
	row := q.db.QueryRowContext(ctx, getDAP, handle)
	var i Dap
	err := row.Scan(
		&i.Dbid,
		&i.ID,
		&i.Did,
		&i.Handle,
		&i.Proof,
		&i.DateCreated,
	)
	return i, err
}
